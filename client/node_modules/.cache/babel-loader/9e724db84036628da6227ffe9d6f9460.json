{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\maelj\\\\Documents\\\\programmation\\\\Web\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nconst ListTodos = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]); //delete todo fonction\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/:${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deleteTodo);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json(); //console.log(jsonData);\n\n      setTodos(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["C:/Users/maelj/Documents/programmation/Web/pern-todo/client/src/components/ListTodos.js"],"names":["React","Fragment","useEffect","useState","ListTodos","todos","setTodos","deleteTodo","id","fetch","method","console","log","error","message","getTodos","response","jsonData","json","map","todo","description","todo_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAFoB,CAIxB;;AACA,QAAMI,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,QAAI;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,gCAA+BD,EAAG,EAApC,EAC9B;AAACE,QAAAA,MAAM,EAAE;AAAT,OAD8B,CAA9B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACH,KAJD,CAIE,OAAOM,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AAEH;AACJ,GATD;;AAYI,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMQ,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB,CAFA,CAGA;;AACAZ,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACH,KALD,CAKE,OAAOJ,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AAEH;AACJ,GAVD;;AAWAZ,EAAAA,SAAS,CAAC,MAAK;AACXa,IAAAA,QAAQ;AAEX,GAHQ,EAGP,EAHO,CAAT;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAO,MAAA,KAAK,EAAC,wBAAb;AAAA,8BACR;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADQ,eAQR;AAAA,kBAMKA,KAAK,CAACc,GAAN,CAAUC,IAAI,iBACX;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCAAI;AAAQ,cAAA,SAAS,EAAG,gBAApB;AAAqC,cAAA,OAAO,EAAI,MAAMd,UAAU,CAACa,IAAI,CAACE,OAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAWF,IAAI,CAACE,OAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AANL;AAAA;AAAA;AAAA;AAAA,cARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5DD;;GAAMlB,S;;KAAAA,S;AA8DN,eAAeA,SAAf","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\r\n\r\nconst ListTodos = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n//delete todo fonction\r\nconst deleteTodo = async (id) => {\r\n    try {\r\n        const deleteTodo = await fetch(`http://localhost:5000/todos/:${id}`,\r\n        {method: \"DELETE\"});\r\n        console.log(deleteTodo)\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        \r\n    }\r\n}\r\n\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n            //console.log(jsonData);\r\n            setTodos(jsonData);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            \r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        getTodos();\r\n        \r\n    },[]);\r\n    console.log(todos)\r\n    return (\r\n        <Fragment>\r\n            <table class=\"table mt-5 text-center\">\r\n    <thead>\r\n      <tr>\r\n        <th>Description</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        {/*       <tr>\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>*/}\r\n        {todos.map(todo => (\r\n            <tr key = {todo.todo_id}>\r\n                <td>{todo.description}</td>\r\n                <td>Edit</td>\r\n                <td><button className = \"btn btn-danger\" onClick = {() => deleteTodo(todo.todo_id)}>Delete</button></td>\r\n            </tr>\r\n        ))}\r\n    </tbody>\r\n  </table>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}